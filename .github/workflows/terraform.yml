name: Terraform Automation

on:
  push:
    branches:
      - master  # Trigger on push to the main branch
  pull_request:
    branches:
      - master  # Trigger on pull request to the main branch
  workflow_dispatch:  
      - master 
  workflow_dispatch: # Trigger on pull request to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up AWS CLI credentials (automatically sets AWS environment variables)
      - name: Set up AWS CLI credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Or use your desired region

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      # Step 4: Initialize Terraform
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      # Step 5: Validate Terraform configuration
      - name: Validate Terraform configuration
        working-directory: ./terraform
        run: terraform validate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      # Step 6: Plan Terraform changes
      - name: Plan Terraform changes
        working-directory: ./terraform
        run: terraform plan -var="public_key=${{ secrets.PUBLIC_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      # Step 7: Apply Terraform changes
      - name: Apply Terraform changes
        working-directory: ./terraform
        run: terraform apply -auto-approve -var="public_key=${{ secrets.PUBLIC_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      # Step 8: Terraform Destroy (to destroy the infrastructure)
      - name: Destroy Terraform infrastructure
        working-directory: ./terraform  # You can customize when to destroy (e.g., manually or on push)
        if: ${{ github.event_name == 'workflow_dispatch' }}  # Only run this if manually triggered
        run: terraform destroy -auto-approve -var="public_key=${{ secrets.PUBLIC_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
